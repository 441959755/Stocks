// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package pb;
option go_package = ".;pb";


import "common.proto";
import "quote.proto";






// Email消息类型
enum MessageType {
	MessageType_NULL = 0;

	Notice = 1;		// 系统消息
	Popup_Adv = 2;	// 弹窗广告

	
	Chat = 9;		// 普通聊天
	
	RoomChat = 10;	// 房间聊天消息
	RoomInvite = 11;// 房间邀请
}


// 游戏类型
enum GameType {
	GameType_NULL = 0;
	
	ShuangMang = 3;		// 双盲训练
	DingXiang = 4;		// 定向训练
	FenShi = 5;			// 分时训练
	ZhiBiao	 = 17;		// 指标训练
	TiaoJianDan = 11;	// 条件单训练
	QiHuo = 6;			// 期货训练
	TiaoZhan = 16;		// 挑战（用其他玩家的训练记录进行游戏）

	JJ_PK = 1;			// PK大战
	JJ_DuoKong = 2;		// 多空大战
	JJ_ChuangGuan = 9;	// 闯关赛
	JJ_QiHuo = 15;		// 期货大战

	MoNiChaoGu = 10;	// 模拟炒股
	ChaoGuDaSai = 12;	// 炒股大赛
	GeGuJingChai = 7;	// 个股竞猜
	DaPanJingChai = 8;	// 大盘竞猜

	MaxGameType = 30;	// 最大游戏类型编号
}


// 玩家的游戏属性
enum GamePropertyId {
	Gold = 0;				// 金币
	Diamond = 1;			// 钻石
	VIP = 2;				// VIP天数
	Exp = 3;				// 经验
	Level = 4;				// 等级
	Fame = 5;				// 威望、名誉

	Max = 30;				// 最大属性
}


// 游戏操作Id
enum GameOperationId {
	GameOperationId_NULL = 0;	// 空

	Ask = 1;					// 买入
	Bid = 2;					// 卖出
	Wait = 3;					// 观望
	Hold = 4;					// 持有
	Bid_Force = 5;				// 强制卖出
	Ask_Force = 6;				// 强制买入
	Long = 8;					// 买空
	Short = 9;					// 卖空
	Close_Force = 10;			// 强行平仓

	END = 150;					// 回合结束
}
// 游戏结果Id
enum GamePkResult {
	Draw = 0;		// 打平
	Win = 1;		// 胜
	Lost = 2;		// 负
	Giveup = -1;	// 放弃
}


// 资产兑换方向
enum ExchangeDirection {
	ExchangeDirection_NULL = 0;	// 空
	Forward = 1;				// 正向：属性->资产
	Reverse = 2;				// 反向：资产->属性
}
// 订单类型
enum OrderType {
	OrderType_NULL = 0;	// 空

	AskMarket = 1;		// 市价买
	BidMarket = 2;		// 市价卖
	AskLimit = 3;		// 限价买
	BidLimit = 4;		// 限价卖
	AskLimit_Cancel = 5;// 限价买撤单
	BidLimit_Cancel = 6;// 限价卖撤单
	BidMarket_Auto = 7;	// 系统自动卖（比如：比赛结束，但玩家的股票账户仍然持仓，则强制卖出）
}
// 订单状态
enum OrderState {
	Init = 0;		// 委托中（未成交）
	Partial = 1;	// 部分成交
	Done = 2;		// 已成交
	ManulCancel = 3;// 手动撤销
	AutoCancel = 4;	// 自动撤销
}


// 背包项
message BackbagGrid {
	string properties = 1;			// 物品内容：json字符串
	int64 ts = 2;					// 发放时间戳
	string memo = 3;				// 物品说明
}
message Backbag {
	repeated BackbagGrid grids = 1;	// 背包格子
}



// 游戏输赢计数器
message GameCounter {
	GameType game = 1;	// 游戏类型ID
	int32 win = 2;		// 总共赢的次数
	int32 lose = 3;		// 总共输的次数
}
message GameCounters {
	repeated GameCounter items = 1;	// 所有游戏的计数器
}
// 当日游戏次数计数器
message TodayGameTimes {
	int64 ts = 1;				// 当日时间戳
	repeated int32 counter = 2;	// 游戏次数
}
// 双盲训练状态
message SmxlState {
	int64 reset_ts = 1;				// 当前最后一次重置时间戳
	int32 reset_counter = 2;		// 当前重置次数（跨月自动清零）
	int64 reset_ts_premonth = 3;	// 非当前月的最后一次重置时间戳
	int64 last_month_report_ts = 4;	// 最近一次生成月报的时间戳
	int64 gold_init = 5;			// 本月初始资金
	int64 gold = 6;					// 本月当前资金
	int64 today_ts = 7;				// 当天时间戳
	int32 today_times = 8;			// 当日游戏次数
}
// 闯关状态
message CgLogAward {
	int32 stage = 1;				// 关卡序号
	bool awarded  = 2;				// 关卡奖励是否派发过
	bool gotten = 3;				// 关卡奖励是否领取过
}
message CgState {
	int64 season_id = 1;			// 赛季ID，时间戳：YYYYMM
	int32 stage = 2;				// 当前关卡序号
	int32 progress = 3;				// 当前关卡进度
	int32 lifes = 4;				// 当前关卡生命值
	int32 win = 5;					// 胜场次
	int32 lose = 6;					// 负场次
	bool clearance = 7;				// 是否通关
	repeated CgLogAward awards = 8;// 关卡奖励日志

}
// 模拟炒股状态
message MncgState {
	double account = 1;					// 账户可用余额（不包括冻结部分）
	StockOrderList order_list = 2;		// 委托列表（未成交的股票订单）
	StockPositionList position_list = 3;// 持仓列表
}
// 炒股大赛状态
message CgdsStateItem {
	int32 id = 1;						// 炒股大赛ID
	MncgState state = 2;				// 炒股大赛数据
}
message CgdsState {
	repeated CgdsStateItem items = 1;	// 参与中的所有炒股大赛状态
}
// 玩家的游戏数据
message GameData {
	int32 uid = 1;						// uid
	string nickname = 2;				// 昵称
	string icon = 3;					// 头像
	repeated int64 properties = 4;		// 玩家游戏属性
	repeated GameCounter counters = 5;	// 游戏输赢计数器
	SmxlState smlx_state = 6;			// 双盲训练状态
	CgState cg_state = 7;				// 闯关状态
	int64 today_ts = 8;					// 今日时间戳
	repeated int32 today_times= 9;		// 今日游戏计数器
	repeated int32 stock_list = 10;		// 关注的股票列表
}


// 同步玩家游戏属性
message GamePropertyItem {
	GamePropertyId id = 1;		// 属性ID
	int64 old_value = 2;		// 原属性值
	int64 new_value = 3;		// 现属性值
}
message GameProperties {
	repeated GamePropertyItem items = 1;
}


// 游戏操作步骤
message GameOperationItem {
	GameOperationId op_id = 1;	// 操作Id
	int32 code = 2;				// 行情代码：股票或期货
	KType k_type = 3;			// 行情类型：日K，分时
	int64 k_ts = 4;				// 操作参数：操作时所在的行情时间：日K线的格式为YYYYMMDD，分时K线的格式为HHMMSS
	int32 k_offset = 5;			// 操作参数：操作时所在的行情偏移量
	double price = 6;			// 操作参数：买入或卖出价格
	int64 volume = 7;			// 操作参数：买入或卖出量
	int64 op_ts = 8;			// 操作参数：操作时间戳
}
message GameOperations {
	repeated GameOperationItem items = 1;	// 操作集合
	repeated int32 jun_xian = 2;			// 行情均线设置
}


// 游戏结果
message GameResult {
	int32 uid = 1;				// uid
	GameType g_type = 2;		// 游戏类型
	int32 quotes_code = 3;		// 行情代码：股票代码或期货代码
	KType k_type = 4;			// 行情类型：日K，分时
	int64 k_from = 5;			// 行情起始日期YYYYMMDD或时间HHMMSS
	int64 k_to = 6;				// 行情结束日期YYYYMMDD或时间HHMMSS
	double stock_profit_rate = 7;//同期股票涨跌幅（*100%）
	double user_profit_rate = 8;// 用户盈利率（*100%）
	int64 user_capital = 9;		// 用户初始资本金
	int64 user_profit = 10;		// 用户盈利额
	int64 ts = 11;				// 游戏结果时间戳
	int32 rank = 12;			// 游戏结果：本场排行（若是单人或双人游戏，排名第2则为输）
	int64 ref_id = 13;			// 关联ID
	int64 k_startup = 14;		// 行情起始位置（玩家的开始位置），距离起始行情的偏移量
	int64 k_stop = 15;			// 行情结束位置（玩家的结束位置），距离起始行情的偏移量
}







// 登录游戏服
message CmdGameLogin {
	int32 uid    = 1; // 玩家ID
	string token = 2; // 登录服返回的token
}
// 登录游戏服应答
message CmdGameLoginReply {
	ErrorInfo result = 1;	// 登录结果
	GameData data = 2; 		// 玩家的游戏数据
}


// 上传头像
message CmdUploadIcon {
	int32 uid    = 1;	// 玩家ID
	bytes icon = 2;		// 玩家头像数据（不能大于500K，客户端先将原图处理再上传）
}
// 上传头像应答(修改成功后，ErrorInfo消息的err字段里面保存头像的URL)
// 应答消息：ErrorInfo


// 更改昵称
message CmdEditNick {
	int32 uid    = 1;	// 玩家ID
	string nick = 2;	// 新昵称
}
// 更改昵称应答(修改成功后，ErrorInfo消息的err字段里面保存新的昵称)
// 应答消息：ErrorInfo


// 更改头像
message CmdEditIcon {
	int32 uid    = 1;	// 玩家ID
	string icon = 2;	// 玩家头像URL
}
// 更改头像应答(修改成功后，ErrorInfo消息的err字段里面保存头像的URL)
// 应答消息：ErrorInfo


// 获取背包列表请求：空
// 获取背包列表应答：Backbag


// 领取背包物品请求
message CmdGetItem {
	int64 ts    = 1;	// 时间戳
}
// 领取背包物品应答：ErrorInfo


// 开始游戏
message CmdGameStart {
	GameType game    = 1;	// 游戏类型
}
// 开始游戏应答
// 应答消息：ErrorInfo


// 结束游戏
message CmdGameOver {
	GameResult result = 1;			// 游戏结果
	GameOperations operations = 2;	// 游戏操作步骤集合
}
// 结束游戏应答
// 应答消息：无消息体


// 查询游戏结果
message CmdQueryGameResult {
	// 查询自己的游戏结果
	GameType g_type = 1;	// 游戏类型
	int64 from = 2;			// 游戏起始时间戳
	int64 to = 3;			// 游戏结束时间戳
	int32 page_size = 4;	// 每页记录条数
	int32 uid = 5;			// 玩家ID
	int32 ts = 6;			// 游戏时间戳（查询一条游戏结果的时候填写）
}
// 查询游戏结果应答
message CmdQueryGameResultReply {
	repeated GameResult results = 1;// 游戏结果数组
}


// 查询游戏操作步骤
message CmdGetGameOperations {
	int32 uid = 1;	// 用户ID
	int64 ts = 2;	// 游戏结果的时间戳
}


// 查询双盲月报
// 请求类型：无消息体
// 查询双盲月报应答
message CmdGetSmxlReportReply {
	int64 capital_init = 1;		// 初始资本金
	int64 capital_final = 2;	// 当前资本金
	float profit_rate = 3;		// 总体盈利率
	int32 win_count = 4;		// 赢的次数
	int32 win_code = 5;			// 赢的股票代码
	float win_rate = 6;			// 赢的盈利率
	int32 lose_count = 7;		// 输的次数
	int32 lose_code = 8;		// 输的股票代码
	float lose_rate = 9;		// 输的盈利率
	int32 count = 10;			// 总共游戏次数
	float rank_captial = 11;	// 资本金击败百分比
	float rank_rate = 12;		// 盈利率击败百分比
}


// 重置双盲训练初始资本金
// 请求类型：无消息体
// 重置双盲训练初始资本金应答
// 应答类型：ErrorInfo



// 创建房间
message CmdRoomCreate {
	GameType game = 1;				// 游戏类型
	int32 uid = 2;					// 房主（第一个进入房间的，默认为房主）
  	int32 node = 3;					// 用户所在节点（客户端不需要该参数）
  	int32 capital = 4;				// 报名费
	string pwd = 5;					// 房间密码
	repeated int32 jun_xian = 6;	// 行情均线设置
}
// 创建房间应答
message CmdRoomCreateReply {
	ErrorInfo err = 1;				// 结果
	int32 id = 2;					// 房间ID
}
// 进入房间
message CmdRoomEnter {
	int32 id = 1;					// 房间ID
	GameType game = 2;				// 游戏类型
	int32 uid = 3;					// 用户ID
  	int32 node = 4;					// 用户所在节点（客户端不需要该参数）
	string pwd = 5;					// 房间密码
	repeated int32 jun_xian = 6;	// 行情均线设置
}
// 进入房间应答
message CmdRoomEnterReply {
	ErrorInfo err = 1;	// 结果
	int32 id = 2;		// 房间ID
  	int32 node = 3;		// 用户所在节点（客户端不需要该参数）
}
// 离开房间
message CmdRoomLeave {
	int32 id = 1;		// 房间ID
	int32 uid = 2;		// 用户ID
}
// 离开房间应答
message CmdRoomLeaveReply {
	ErrorInfo err = 1;	// 结果
}

// 同步玩家就绪：RoomPlayerStatus
// 应答：（无）
// 同步游戏状态：RoomGameStatus
// 应答：（无）
// 同步游戏操作：RoomGameOp
// 应答：（无）

// 同步玩家进入房间
message SyncRoomEnter {
	int32 id = 1;		// 房间ID
	GameType game = 2;	// 游戏类型
	GameData player=3;	// 玩家数据
}
// 同步玩家离开房间
message SyncRoomLeave {
	int32 id = 1;		// 房间ID
	GameType game = 2;	// 游戏类型
	int32 uid = 3;		// 玩家ID
}
// 同步房间玩家状态
message RoomPlayerStatus {
	int32 id = 1;		// 房间ID
	int32 uid = 2;		// 用户ID
	bool ready= 3;		// 是否就绪
}
// 同步房间游戏状态
message RoomGameStatus {
	int32 id = 1;		// 房间ID
	int32 status= 2;	// 游戏状态：准备、开始、结束等等
}
// 同步房间游戏操作
message RoomGameOp {
	int32 id = 1;		// 房间ID
	int32 uid = 2;		// 用户ID
	bytes ops = 3;		// 游戏操作
}
// 同步房间游戏结果
message RoomGameResult {
	int32 id = 1;		// 房间ID
	bytes result = 2;	// 游戏结果
}
// 房间数据
message RoomData {
	int32 id = 1;		// 房间ID
	GameType game = 2;	// 游戏类型
	bytes data = 3;		// 房间数据
}
// PK房间数据
message RoomPkPlayer {
	GameData gd = 1;			// 玩家数据
	bool ready = 2;				// 玩家是否就绪
	bool giveup = 3;			// 玩家是否逃跑
	GameOperations ops = 4;		// 游戏操作
	GameResult result = 5;		// 游戏结果
	int64 curPos = 6;			// 游戏进度，距离起始行情的偏移量
	repeated int32 jun_xian = 7;// 行情均线设置
}
message RoomDataPk {
	int32 id = 1;					// 房号
	int32 status = 2;				// 游戏状态
	int32 capital = 3;				// 报名费
	int32 code = 4;					// 行情代码
	KType ktype = 5;				// 行情类型：日K，分时等等
	int64 tsQuoteFrom = 6;			// 行情开始时间
	int64 tsQuoteTo = 7;			// 行情结束时间
	int64 tsQuoteStart = 8;			// 行情起始位置（开始玩的位置），距离起始行情的偏移量
	repeated RoomPkPlayer players = 9;	// 玩家数据
	int64 tsGameFrom = 10;			// 游戏开始时间戳（精确：秒）
	int64 tsGameCur = 11;			// 游戏当前时间戳（精确：秒）
	Quotes quotes = 12;				// 股票行情
	QuotesFuture quotes_future = 13;// 期货行情
}



// Email
message Email {
	int32 sender = 1;		// 发送者用户ID（0为系统发送者）
	int32 receiver = 2;		// 接收者用户ID或房间ID（房间邀请信息填0，房间广播填房间ID）
	MessageType type = 3;	// 消息类型
	string text = 4;		// 消息内容
	int64 ts = 5;			// 发送时间
}



// 闯关赛相关
// 闯关赛配置
message CgsConf {
	int32 id = 1;			// 当前这一轮闯关赛的时间编码：YYYYMMDD
	int64 from = 2;			// 开始时间戳：精确到秒
	int64 to = 3;			// 结束时间戳：精确到秒
	string conf = 4;		// 闯关赛配置：Json
	string award = 5;		// 赛季榜奖励：Json
	int32 status = 6;		// 游戏状态：0表示未开始，1表示游戏中，2表示已结束
	repeated int32 people=7;// 每一关的人数

}
// 排行榜
message RankingItem {
	int32 uid = 1;			// uid
	string nickname = 2;	// 昵称
	string icon = 3;		// 头像
	int32 cgs_clearance = 4;// 闯关赛的登顶次数
	int32 cgs_netwin = 5;	// 闯关赛的净胜
	int32 cgs_progress = 6;	// 闯关赛的关卡进度
	int32 cgds_account = 7;	// 炒股大赛资金账户余额
}
message RankingList {
	int32 id = 1;					// 当前这一轮闯关赛的时间编码：YYYYMMDD
	repeated RankingItem Items = 2;	// 排行
}
// 闯关赛排行榜查询
message CmdCgsRanking {
	int32 id = 1;	// 当前这一轮闯关赛的时间编码：YYYYMMDD
	int32 stage = 2;// 关卡序号
}
// 闯关赛游戏数据
message JjPlayer {
	GameData gd = 1;		// 玩家数据
	GameOperations ops = 2;	// 游戏操作
	GameResult result = 3;	// 游戏结果
}
message JjGame {
	int32 code = 1;					// 行情代码
	KType ktype = 2;				// 行情类型：日K，分时等等
	int64 tsQuoteFrom = 3;			// 行情开始时间
	int64 tsQuoteTo = 4;			// 行情结束时间
	int64 tsQuoteStart = 5;			// 行情起始位置（开始玩的位置），距离起始行情的偏移量
	Quotes quotes = 6;				// 股票行情
	QuotesFuture quotes_future = 7;	// 期货行情
	repeated JjPlayer players = 8;	// 玩家数据
	int32 capital = 9;				// 报名费
}



// 模拟炒股
message CmdStockOrder {
	int32 code = 1;		// 股票代码
	OrderType type = 2;	// 订单类型：市价/限价买、市价/限价卖
	double price = 3;	// 价格：限价买卖时需要填写，市价可以忽略
	int32 volume = 4;	// 量
	int32 amount = 5;	// 额
	int32 uid = 6;		// 玩家ID
	int32 id = 7;		// 炒股大赛ID
}
message CmdStockOrderReply {
	int64 order_id = 1;		// 订单ID
	int32 node = 2;			// 订单所在的节点
	ErrorInfo result = 3;	// 订单结果
}
message CmdStockOrderCancel {
	int64 order_id = 1;	// 订单ID
	OrderType type = 2;	// 订单类型：限价买入撤单、限价卖出撤单
	int32 code = 3;		// 股票代码
	int32 uid = 4;		// 玩家ID
	int32 id = 5;		// 炒股大赛ID
	int32 node = 6;		// 订单所在的节点
}
message StockOrder {
	int64 order_id = 1;	// 订单ID
	int32 code = 2;		// 股票代码
	OrderType type = 3;	// 订单类型：市价/限价买、市价/限价卖
	OrderState state = 4;// 订单状态：委托中（未成交）、已成交、手动撤销、自动撤销
	double price = 5;	// 成交价格
	int32 volume = 6;	// 成交量
	int32 uid = 7;		// 玩家ID
	int32 id = 8;		// 炒股大赛ID
	int32 node = 9;		// 订单所在的节点
}
message StockOrderList {
	repeated StockOrder items = 1;	// 订单列表
}
message StockOrderResult {
	ErrorInfo result = 1;	// 结果
	StockOrder order = 3;	// 订单
}
message StockPosition {
	int32 code = 1;			// 股票代码
	int32 volume = 2;		// 持仓量
	double price_cost = 3;	// 持仓均格：即成本价
}
message StockPositionList {
	repeated StockPosition items = 1;	// 持仓列表
}
message CmdMncgExchange {
	ExchangeDirection direction = 1;	// 兑换方向：1表示属性->资产，2表示资产->属性
	int64 amount = 2;					// 兑换数目
}
message CmdMncgExchangeReply {
	ErrorInfo result = 1;	// 结果
	double account = 2;		// 当前资产
}
message CmdMncgEditStock {
	bool removed = 1;		// 操作：false表示添加，true表示删除
	int32 code = 2;			// 股票代码
}
message CmdQueryStockOrder {
	int32 uid = 1;			// 玩家ID
	int64 from = 2;			// 订单起始时间戳
	int64 to = 3;			// 订单结束时间戳
	int32 page_size = 4;	// 每页记录条数
	int64 order_id = 5;		// 订单时间戳（查询一条订单的时候填写）
	int32 id = 6;			// 炒股大赛ID
}



// 炒股大赛相关
message CgdsConf {
	int32 id = 1;			// 炒股大赛的时间编码：YYYYMMDD
	int64 reg_to = 2;		// 报名截止时间戳：精确到秒
	int64 from = 3;			// 开始时间戳：精确到秒
	int64 to = 4;			// 结束时间戳：精确到秒
	string conf = 5;		// 炒股大赛配置：Json
	string award = 6;		// 排行榜奖励：Json
	int32 status = 7;		// 游戏状态：0表示未开始，1表示游戏中，2表示已结束
	string title = 8;		// 炒股大赛标题
	string logo = 9;		// 宣传图
	string url = 10;		// 宣传图URL
}
// 炒股大赛列表
message CgdsList {
	repeated CgdsConf items = 1;	// 炒股大赛列表
}
// 报名
message CmdCgdsReg {
	int32 id = 1;			// 炒股大赛的时间编码：YYYYMMDD
}
message CmdCgdsRegReply {
	ErrorInfo result = 1;				// 报名结果
	CgdsStateItem cgds_state_item = 2;	// 炒股大赛状态
}
// 炒股大赛排行榜
message CmdCgdsRanking {
	int32 id = 1;			// 炒股大赛的时间编码：YYYYMMDD
}